---
// import Layout from '../layouts/Layout.astro';
---

<main>
  <div class="container-form">
    <form class="sign-up" id="signUpForm">
      <h2>Registrarse</h2>
      <span>Use su correo electronico para registrarse</span>
      <div class="container-input">
        <ion-icon name="people-circle-outline"></ion-icon>
        <input
          type="text"
          placeholder="Nombre del club"
          id="clubName"
          required
        />
        <span class="error-message" id="clubNameError"></span>
      </div>
      <div class="container-input">
        <ion-icon name="mail-outline"></ion-icon>
        <input type="email" placeholder="Email" id="email" required />
        <span class="error-message" id="emailError"></span>
      </div>

      <div class="container-input">
        <ion-icon name="lock-closed-outline"></ion-icon>
        <input type="password" placeholder="Password" id="password" required />
        <span class="error-message" id="passwordError"></span>
      </div>
      <div class="container-input">
        <ion-icon name="lock-closed-outline"></ion-icon>
        <input
          type="password"
          placeholder="Confirm Password"
          id="confirmPassword"
          required
        />
        <span class="error-message" id="confirmPasswordError"></span>
      </div>
      <button class="button" type="submit">REGISTRARSE</button>
    </form>
  </div>
</main>

<script>
  const signUpForm = document.getElementById("signUpForm");
  if (signUpForm) {
    signUpForm.addEventListener("submit", async function (event) {
      event.preventDefault();

      // Limpiar mensajes de error
      const clubNameError = document.getElementById("clubNameError");
      clubNameError!.textContent = "";
      const emailError = document.getElementById("emailError");
      emailError!.textContent = "";
      const passwordError = document.getElementById("passwordError");
      passwordError!.textContent = "";
      const confirmPasswordError = document.getElementById(
        "confirmPasswordError"
      );
      confirmPasswordError!.textContent = "";

      const clubName = (
        document.getElementById("clubName") as HTMLInputElement
      ).value.trim();
      const email = (
        document.getElementById("email") as HTMLInputElement
      ).value.trim();
      const password = (document.getElementById("password") as HTMLInputElement)
        .value;
      const confirmPassword = (
        document.getElementById("confirmPassword") as HTMLInputElement
      ).value;

      let isValid = true;

      // Validar nombre del club
      if (clubName === "") {
        document.getElementById("clubNameError")!.textContent =
          "El nombre del club es obligatorio.";
        isValid = false;
      }

      // Validar email
      const emailPattern = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
      if (!emailPattern.test(email)) {
        document.getElementById("emailError")!.textContent =
          "El email no es v치lido.";
        isValid = false;
      }

      // Validar contrase침a (m칤nimo 8 caracteres)
      if (password.length < 6) {
        document.getElementById("passwordError")!.textContent =
          "La contrase침a debe tener al menos 6 caracteres.";
        isValid = false;
      }

      // Validar confirmaci칩n de contrase침a
      if (password !== confirmPassword) {
        document.getElementById("confirmPasswordError")!.textContent =
          "Las contrase침as no coinciden.";
        isValid = false;
      }

      // Si todo es v치lido, enviar la solicitud
      if (isValid) {
        try {
          const response = await fetch(
            "https://planny-432016.uc.r.appspot.com/api/auth/register",
            {
              method: "POST",
              headers: {
                "Content-Type": "application/json",
              },
              body: JSON.stringify({
                name: clubName,
                email,
                password,
              }),
            }
          );
          if (response.ok) {
            const data = await response.json();
            console.log("游볨 ~ data:", data);
            alert("Registro exitoso");
          } else {
            const errorData = await response.json();
            alert(`Error: ${errorData.message}`);
          }
        } catch (error) {
          console.error("Error:", error);
          alert("Hubo un problema con el registro.");
        }
      }
    });
  }
</script>

<style>
  @import url("https://fonts.googleapis.com/css2?family=Montserrat:ital,wght@0,100..900;1,100..900&display=swap");

  * {
    font-family: "Montserrat", sans-serif;
  }
  body {
    width: 100%;
    height: 100vh;
    display: flex;
    justify-content: center;
    align-items: center;
    background-color: rgb(170, 167, 167);
  }
  .container-form {
    width: 800px;
    height: 600px;
    position: relative;
    background-color: white;
    border-radius: 15px;
    overflow: hidden;
    box-shadow: 0 0 10px rgb(0, 0, 0, 0.3);
    background-color: white;
  }

  .container-form form {
    height: 100%;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    transition: transform 0.5s ease-in;
  }
  .container-form h2 {
    font-size: 30px;
    margin-bottom: 20px;
  }
  .container-form span {
    font-size: 12px;
    margin-bottom: 15px;
  }
  .container-input {
    width: 300px;
    height: 40px;
    margin-bottom: 10px;
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 8px;
    padding: 0 15px;
    background-color: #eeeeee;
  }
  .container-input input {
    border: none;
    outline: none;
    width: 100%;
    height: 100%;
    background-color: inherit;
  }
  .container-form a {
    color: black;
    font-size: 14px;
    margin-bottom: 20px;
    margin-top: 5px;
  }
  .button {
    width: 170px;
    height: 45px;
    font-size: 15px;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    margin-top: 10px;
    background-color: rgb(216, 93, 93);
    color: white;
  }
  /*Animation form*/

  .sing-up {
    transform: translateX(-100%);
  }
  .container.toggle .sing-in {
    transform: translateX(100%);
  }
  .container.toggle .sing-up {
    transform: translateX(0);
  }

  /*Welcome*/
  .container-welcome {
    position: absolute;
    width: 50%;
    height: 100%;
    display: flex;
    align-items: center;
    transform: translateX(100%);
    background-color: rgb(235, 53, 53);
    transition:
      transform 0.5s ease-in-out,
      border-radius 0.5s ease-in-out;
    overflow: hidden;
    border-radius: 50% 0 0 50%;
  }
  .container.toggle .container-welcome {
    transform: translateX(0);
    border-radius: 0 50% 50% 0;
    background-color: rgb(151, 151, 151);
  }
  .container-welcome .welcome {
    position: absolute;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 20px;
    padding: 0 50px;
    color: white;
    transition: transform 0.5s ease-in-out;
  }
  .welcome-sign-in {
    transform: translateX(100%);
  }
  .container-welcome h3 {
    font-size: 40px;
  }
  .container-welcome p {
    font-size: 14px;
    text-align: center;
  }
  .container-welcome .button {
    border: 2px solid white;
    background-color: transparent;
  }

  .container.toggle .welcome-sign-in {
    transform: translateX(0);
  }
  .container.toggle .welcome-sign-up {
    transform: translateX(-100%);
  }
</style>
